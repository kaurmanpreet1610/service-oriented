//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalWebClient.SalaryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalaryDetails", Namespace="http://schemas.datacontract.org/2004/07/HospitalService1")]
    [System.SerializableAttribute()]
    public partial class SalaryDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SalaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Salary {
            get {
                return this.SalaryField;
            }
            set {
                if ((this.SalaryField.Equals(value) != true)) {
                    this.SalaryField = value;
                    this.RaisePropertyChanged("Salary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="getAllSalary", Namespace="http://schemas.datacontract.org/2004/07/HospitalService1")]
    [System.SerializableAttribute()]
    public partial class getAllSalary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable allSalariesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable allSalaries {
            get {
                return this.allSalariesField;
            }
            set {
                if ((object.ReferenceEquals(this.allSalariesField, value) != true)) {
                    this.allSalariesField = value;
                    this.RaisePropertyChanged("allSalaries");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SalaryService.ISalaryService")]
    public interface ISalaryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaryService/GetSalaryDetails", ReplyAction="http://tempuri.org/ISalaryService/GetSalaryDetailsResponse")]
        HospitalWebClient.SalaryService.SalaryDetails[] GetSalaryDetails(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaryService/GetSalaryDetails", ReplyAction="http://tempuri.org/ISalaryService/GetSalaryDetailsResponse")]
        System.Threading.Tasks.Task<HospitalWebClient.SalaryService.SalaryDetails[]> GetSalaryDetailsAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaryService/InsertSalaryDetails", ReplyAction="http://tempuri.org/ISalaryService/InsertSalaryDetailsResponse")]
        string InsertSalaryDetails(HospitalWebClient.SalaryService.SalaryDetails sd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaryService/InsertSalaryDetails", ReplyAction="http://tempuri.org/ISalaryService/InsertSalaryDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertSalaryDetailsAsync(HospitalWebClient.SalaryService.SalaryDetails sd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaryService/GetAllSalary", ReplyAction="http://tempuri.org/ISalaryService/GetAllSalaryResponse")]
        HospitalWebClient.SalaryService.SalaryDetails[] GetAllSalary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaryService/GetAllSalary", ReplyAction="http://tempuri.org/ISalaryService/GetAllSalaryResponse")]
        System.Threading.Tasks.Task<HospitalWebClient.SalaryService.SalaryDetails[]> GetAllSalaryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaryService/UpdateSalary", ReplyAction="http://tempuri.org/ISalaryService/UpdateSalaryResponse")]
        bool UpdateSalary(HospitalWebClient.SalaryService.SalaryDetails sd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaryService/UpdateSalary", ReplyAction="http://tempuri.org/ISalaryService/UpdateSalaryResponse")]
        System.Threading.Tasks.Task<bool> UpdateSalaryAsync(HospitalWebClient.SalaryService.SalaryDetails sd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaryService/FindById", ReplyAction="http://tempuri.org/ISalaryService/FindByIdResponse")]
        bool FindById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaryService/FindById", ReplyAction="http://tempuri.org/ISalaryService/FindByIdResponse")]
        System.Threading.Tasks.Task<bool> FindByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaryService/getSalaries", ReplyAction="http://tempuri.org/ISalaryService/getSalariesResponse")]
        HospitalWebClient.SalaryService.getAllSalary getSalaries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalaryService/getSalaries", ReplyAction="http://tempuri.org/ISalaryService/getSalariesResponse")]
        System.Threading.Tasks.Task<HospitalWebClient.SalaryService.getAllSalary> getSalariesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalaryServiceChannel : HospitalWebClient.SalaryService.ISalaryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalaryServiceClient : System.ServiceModel.ClientBase<HospitalWebClient.SalaryService.ISalaryService>, HospitalWebClient.SalaryService.ISalaryService {
        
        public SalaryServiceClient() {
        }
        
        public SalaryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalaryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalaryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalaryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HospitalWebClient.SalaryService.SalaryDetails[] GetSalaryDetails(int ID) {
            return base.Channel.GetSalaryDetails(ID);
        }
        
        public System.Threading.Tasks.Task<HospitalWebClient.SalaryService.SalaryDetails[]> GetSalaryDetailsAsync(int ID) {
            return base.Channel.GetSalaryDetailsAsync(ID);
        }
        
        public string InsertSalaryDetails(HospitalWebClient.SalaryService.SalaryDetails sd) {
            return base.Channel.InsertSalaryDetails(sd);
        }
        
        public System.Threading.Tasks.Task<string> InsertSalaryDetailsAsync(HospitalWebClient.SalaryService.SalaryDetails sd) {
            return base.Channel.InsertSalaryDetailsAsync(sd);
        }
        
        public HospitalWebClient.SalaryService.SalaryDetails[] GetAllSalary() {
            return base.Channel.GetAllSalary();
        }
        
        public System.Threading.Tasks.Task<HospitalWebClient.SalaryService.SalaryDetails[]> GetAllSalaryAsync() {
            return base.Channel.GetAllSalaryAsync();
        }
        
        public bool UpdateSalary(HospitalWebClient.SalaryService.SalaryDetails sd) {
            return base.Channel.UpdateSalary(sd);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSalaryAsync(HospitalWebClient.SalaryService.SalaryDetails sd) {
            return base.Channel.UpdateSalaryAsync(sd);
        }
        
        public bool FindById(int id) {
            return base.Channel.FindById(id);
        }
        
        public System.Threading.Tasks.Task<bool> FindByIdAsync(int id) {
            return base.Channel.FindByIdAsync(id);
        }
        
        public HospitalWebClient.SalaryService.getAllSalary getSalaries() {
            return base.Channel.getSalaries();
        }
        
        public System.Threading.Tasks.Task<HospitalWebClient.SalaryService.getAllSalary> getSalariesAsync() {
            return base.Channel.getSalariesAsync();
        }
    }
}
