//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalWebClient.WorkingDaysService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkingDaysDetails", Namespace="http://schemas.datacontract.org/2004/07/HospitalService1")]
    [System.SerializableAttribute()]
    public partial class WorkingDaysDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfWDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShiftDetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfWD {
            get {
                return this.NumberOfWDField;
            }
            set {
                if ((this.NumberOfWDField.Equals(value) != true)) {
                    this.NumberOfWDField = value;
                    this.RaisePropertyChanged("NumberOfWD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShiftDetails {
            get {
                return this.ShiftDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ShiftDetailsField, value) != true)) {
                    this.ShiftDetailsField = value;
                    this.RaisePropertyChanged("ShiftDetails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="deleteWD", Namespace="http://schemas.datacontract.org/2004/07/HospitalService1")]
    [System.SerializableAttribute()]
    public partial class deleteWD : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int d_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int d_id {
            get {
                return this.d_idField;
            }
            set {
                if ((this.d_idField.Equals(value) != true)) {
                    this.d_idField = value;
                    this.RaisePropertyChanged("d_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="getAllWD", Namespace="http://schemas.datacontract.org/2004/07/HospitalService1")]
    [System.SerializableAttribute()]
    public partial class getAllWD : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable allWdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable allWds {
            get {
                return this.allWdsField;
            }
            set {
                if ((object.ReferenceEquals(this.allWdsField, value) != true)) {
                    this.allWdsField = value;
                    this.RaisePropertyChanged("allWds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WorkingDaysService.IWorkingDaysService")]
    public interface IWorkingDaysService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/GetWDDetails", ReplyAction="http://tempuri.org/IWorkingDaysService/GetWDDetailsResponse")]
        HospitalWebClient.WorkingDaysService.WorkingDaysDetails[] GetWDDetails(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/GetWDDetails", ReplyAction="http://tempuri.org/IWorkingDaysService/GetWDDetailsResponse")]
        System.Threading.Tasks.Task<HospitalWebClient.WorkingDaysService.WorkingDaysDetails[]> GetWDDetailsAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/InsertWDDetails", ReplyAction="http://tempuri.org/IWorkingDaysService/InsertWDDetailsResponse")]
        string InsertWDDetails(HospitalWebClient.WorkingDaysService.WorkingDaysDetails wd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/InsertWDDetails", ReplyAction="http://tempuri.org/IWorkingDaysService/InsertWDDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertWDDetailsAsync(HospitalWebClient.WorkingDaysService.WorkingDaysDetails wd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/GetAllWD", ReplyAction="http://tempuri.org/IWorkingDaysService/GetAllWDResponse")]
        HospitalWebClient.WorkingDaysService.WorkingDaysDetails[] GetAllWD();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/GetAllWD", ReplyAction="http://tempuri.org/IWorkingDaysService/GetAllWDResponse")]
        System.Threading.Tasks.Task<HospitalWebClient.WorkingDaysService.WorkingDaysDetails[]> GetAllWDAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/UpdateWD", ReplyAction="http://tempuri.org/IWorkingDaysService/UpdateWDResponse")]
        bool UpdateWD(HospitalWebClient.WorkingDaysService.WorkingDaysDetails wdID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/UpdateWD", ReplyAction="http://tempuri.org/IWorkingDaysService/UpdateWDResponse")]
        System.Threading.Tasks.Task<bool> UpdateWDAsync(HospitalWebClient.WorkingDaysService.WorkingDaysDetails wdID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/DeleteWD", ReplyAction="http://tempuri.org/IWorkingDaysService/DeleteWDResponse")]
        bool DeleteWD(int EmployeeInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/DeleteWD", ReplyAction="http://tempuri.org/IWorkingDaysService/DeleteWDResponse")]
        System.Threading.Tasks.Task<bool> DeleteWDAsync(int EmployeeInfo);
        
        // CODEGEN: Generating message contract since the wrapper name (deleteWD) of message deleteWDRequest does not match the default value (deleteWD1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/deleteWD", ReplyAction="http://tempuri.org/IWorkingDaysService/deleteWDResponse")]
        HospitalWebClient.WorkingDaysService.deleteWDResponse deleteWD1(HospitalWebClient.WorkingDaysService.deleteWDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/deleteWD", ReplyAction="http://tempuri.org/IWorkingDaysService/deleteWDResponse")]
        System.Threading.Tasks.Task<HospitalWebClient.WorkingDaysService.deleteWDResponse> deleteWD1Async(HospitalWebClient.WorkingDaysService.deleteWDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/FindById", ReplyAction="http://tempuri.org/IWorkingDaysService/FindByIdResponse")]
        bool FindById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/FindById", ReplyAction="http://tempuri.org/IWorkingDaysService/FindByIdResponse")]
        System.Threading.Tasks.Task<bool> FindByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/getWDs", ReplyAction="http://tempuri.org/IWorkingDaysService/getWDsResponse")]
        HospitalWebClient.WorkingDaysService.getAllWD getWDs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWorkingDaysService/getWDs", ReplyAction="http://tempuri.org/IWorkingDaysService/getWDsResponse")]
        System.Threading.Tasks.Task<HospitalWebClient.WorkingDaysService.getAllWD> getWDsAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteWD", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class deleteWDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public HospitalWebClient.WorkingDaysService.deleteWD dd;
        
        public deleteWDRequest() {
        }
        
        public deleteWDRequest(HospitalWebClient.WorkingDaysService.deleteWD dd) {
            this.dd = dd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteWDResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class deleteWDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string deleteWDResult;
        
        public deleteWDResponse() {
        }
        
        public deleteWDResponse(string deleteWDResult) {
            this.deleteWDResult = deleteWDResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWorkingDaysServiceChannel : HospitalWebClient.WorkingDaysService.IWorkingDaysService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkingDaysServiceClient : System.ServiceModel.ClientBase<HospitalWebClient.WorkingDaysService.IWorkingDaysService>, HospitalWebClient.WorkingDaysService.IWorkingDaysService {
        
        public WorkingDaysServiceClient() {
        }
        
        public WorkingDaysServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WorkingDaysServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkingDaysServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkingDaysServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HospitalWebClient.WorkingDaysService.WorkingDaysDetails[] GetWDDetails(int ID) {
            return base.Channel.GetWDDetails(ID);
        }
        
        public System.Threading.Tasks.Task<HospitalWebClient.WorkingDaysService.WorkingDaysDetails[]> GetWDDetailsAsync(int ID) {
            return base.Channel.GetWDDetailsAsync(ID);
        }
        
        public string InsertWDDetails(HospitalWebClient.WorkingDaysService.WorkingDaysDetails wd) {
            return base.Channel.InsertWDDetails(wd);
        }
        
        public System.Threading.Tasks.Task<string> InsertWDDetailsAsync(HospitalWebClient.WorkingDaysService.WorkingDaysDetails wd) {
            return base.Channel.InsertWDDetailsAsync(wd);
        }
        
        public HospitalWebClient.WorkingDaysService.WorkingDaysDetails[] GetAllWD() {
            return base.Channel.GetAllWD();
        }
        
        public System.Threading.Tasks.Task<HospitalWebClient.WorkingDaysService.WorkingDaysDetails[]> GetAllWDAsync() {
            return base.Channel.GetAllWDAsync();
        }
        
        public bool UpdateWD(HospitalWebClient.WorkingDaysService.WorkingDaysDetails wdID) {
            return base.Channel.UpdateWD(wdID);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateWDAsync(HospitalWebClient.WorkingDaysService.WorkingDaysDetails wdID) {
            return base.Channel.UpdateWDAsync(wdID);
        }
        
        public bool DeleteWD(int EmployeeInfo) {
            return base.Channel.DeleteWD(EmployeeInfo);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteWDAsync(int EmployeeInfo) {
            return base.Channel.DeleteWDAsync(EmployeeInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HospitalWebClient.WorkingDaysService.deleteWDResponse HospitalWebClient.WorkingDaysService.IWorkingDaysService.deleteWD1(HospitalWebClient.WorkingDaysService.deleteWDRequest request) {
            return base.Channel.deleteWD1(request);
        }
        
        public string deleteWD1(HospitalWebClient.WorkingDaysService.deleteWD dd) {
            HospitalWebClient.WorkingDaysService.deleteWDRequest inValue = new HospitalWebClient.WorkingDaysService.deleteWDRequest();
            inValue.dd = dd;
            HospitalWebClient.WorkingDaysService.deleteWDResponse retVal = ((HospitalWebClient.WorkingDaysService.IWorkingDaysService)(this)).deleteWD1(inValue);
            return retVal.deleteWDResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<HospitalWebClient.WorkingDaysService.deleteWDResponse> HospitalWebClient.WorkingDaysService.IWorkingDaysService.deleteWD1Async(HospitalWebClient.WorkingDaysService.deleteWDRequest request) {
            return base.Channel.deleteWD1Async(request);
        }
        
        public System.Threading.Tasks.Task<HospitalWebClient.WorkingDaysService.deleteWDResponse> deleteWD1Async(HospitalWebClient.WorkingDaysService.deleteWD dd) {
            HospitalWebClient.WorkingDaysService.deleteWDRequest inValue = new HospitalWebClient.WorkingDaysService.deleteWDRequest();
            inValue.dd = dd;
            return ((HospitalWebClient.WorkingDaysService.IWorkingDaysService)(this)).deleteWD1Async(inValue);
        }
        
        public bool FindById(int id) {
            return base.Channel.FindById(id);
        }
        
        public System.Threading.Tasks.Task<bool> FindByIdAsync(int id) {
            return base.Channel.FindByIdAsync(id);
        }
        
        public HospitalWebClient.WorkingDaysService.getAllWD getWDs() {
            return base.Channel.getWDs();
        }
        
        public System.Threading.Tasks.Task<HospitalWebClient.WorkingDaysService.getAllWD> getWDsAsync() {
            return base.Channel.getWDsAsync();
        }
    }
}
