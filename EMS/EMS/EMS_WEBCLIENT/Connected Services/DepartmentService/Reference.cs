//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalWebClient.DepartmentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentDetails", Namespace="http://schemas.datacontract.org/2004/07/HospitalService1")]
    [System.SerializableAttribute()]
    public partial class DepartmentDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="deleteDepartment", Namespace="http://schemas.datacontract.org/2004/07/HospitalService1")]
    [System.SerializableAttribute()]
    public partial class deleteDepartment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int d_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int d_id {
            get {
                return this.d_idField;
            }
            set {
                if ((this.d_idField.Equals(value) != true)) {
                    this.d_idField = value;
                    this.RaisePropertyChanged("d_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="getAllDepartments", Namespace="http://schemas.datacontract.org/2004/07/HospitalService1")]
    [System.SerializableAttribute()]
    public partial class getAllDepartments : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Data.DataTable allDepartmentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Data.DataTable allDepartments {
            get {
                return this.allDepartmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.allDepartmentsField, value) != true)) {
                    this.allDepartmentsField = value;
                    this.RaisePropertyChanged("allDepartments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DepartmentService.IDepartmentService")]
    public interface IDepartmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartmentDetails", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentDetailsResponse")]
        HospitalWebClient.DepartmentService.DepartmentDetails[] GetDepartmentDetails(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetDepartmentDetails", ReplyAction="http://tempuri.org/IDepartmentService/GetDepartmentDetailsResponse")]
        System.Threading.Tasks.Task<HospitalWebClient.DepartmentService.DepartmentDetails[]> GetDepartmentDetailsAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/InsertDepartmentDetails", ReplyAction="http://tempuri.org/IDepartmentService/InsertDepartmentDetailsResponse")]
        string InsertDepartmentDetails(HospitalWebClient.DepartmentService.DepartmentDetails DepartmentInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/InsertDepartmentDetails", ReplyAction="http://tempuri.org/IDepartmentService/InsertDepartmentDetailsResponse")]
        System.Threading.Tasks.Task<string> InsertDepartmentDetailsAsync(HospitalWebClient.DepartmentService.DepartmentDetails DepartmentInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetAllDepartments", ReplyAction="http://tempuri.org/IDepartmentService/GetAllDepartmentsResponse")]
        HospitalWebClient.DepartmentService.DepartmentDetails[] GetAllDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/GetAllDepartments", ReplyAction="http://tempuri.org/IDepartmentService/GetAllDepartmentsResponse")]
        System.Threading.Tasks.Task<HospitalWebClient.DepartmentService.DepartmentDetails[]> GetAllDepartmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/UpdateDepartment", ReplyAction="http://tempuri.org/IDepartmentService/UpdateDepartmentResponse")]
        bool UpdateDepartment(HospitalWebClient.DepartmentService.DepartmentDetails DepartmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/UpdateDepartment", ReplyAction="http://tempuri.org/IDepartmentService/UpdateDepartmentResponse")]
        System.Threading.Tasks.Task<bool> UpdateDepartmentAsync(HospitalWebClient.DepartmentService.DepartmentDetails DepartmentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/DeleteDepartment", ReplyAction="http://tempuri.org/IDepartmentService/DeleteDepartmentResponse")]
        bool DeleteDepartment(int EmployeeInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/DeleteDepartment", ReplyAction="http://tempuri.org/IDepartmentService/DeleteDepartmentResponse")]
        System.Threading.Tasks.Task<bool> DeleteDepartmentAsync(int EmployeeInfo);
        
        // CODEGEN: Generating message contract since the wrapper name (deleteDepartment) of message deleteDepartmentRequest does not match the default value (deleteDepartment1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/deleteDepartment", ReplyAction="http://tempuri.org/IDepartmentService/deleteDepartmentResponse")]
        HospitalWebClient.DepartmentService.deleteDepartmentResponse deleteDepartment1(HospitalWebClient.DepartmentService.deleteDepartmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/deleteDepartment", ReplyAction="http://tempuri.org/IDepartmentService/deleteDepartmentResponse")]
        System.Threading.Tasks.Task<HospitalWebClient.DepartmentService.deleteDepartmentResponse> deleteDepartment1Async(HospitalWebClient.DepartmentService.deleteDepartmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/FindById", ReplyAction="http://tempuri.org/IDepartmentService/FindByIdResponse")]
        bool FindById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/FindById", ReplyAction="http://tempuri.org/IDepartmentService/FindByIdResponse")]
        System.Threading.Tasks.Task<bool> FindByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/getDepartments", ReplyAction="http://tempuri.org/IDepartmentService/getDepartmentsResponse")]
        HospitalWebClient.DepartmentService.getAllDepartments getDepartments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDepartmentService/getDepartments", ReplyAction="http://tempuri.org/IDepartmentService/getDepartmentsResponse")]
        System.Threading.Tasks.Task<HospitalWebClient.DepartmentService.getAllDepartments> getDepartmentsAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteDepartment", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class deleteDepartmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public HospitalWebClient.DepartmentService.deleteDepartment dd;
        
        public deleteDepartmentRequest() {
        }
        
        public deleteDepartmentRequest(HospitalWebClient.DepartmentService.deleteDepartment dd) {
            this.dd = dd;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteDepartmentResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class deleteDepartmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string deleteDepartmentResult;
        
        public deleteDepartmentResponse() {
        }
        
        public deleteDepartmentResponse(string deleteDepartmentResult) {
            this.deleteDepartmentResult = deleteDepartmentResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDepartmentServiceChannel : HospitalWebClient.DepartmentService.IDepartmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepartmentServiceClient : System.ServiceModel.ClientBase<HospitalWebClient.DepartmentService.IDepartmentService>, HospitalWebClient.DepartmentService.IDepartmentService {
        
        public DepartmentServiceClient() {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DepartmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HospitalWebClient.DepartmentService.DepartmentDetails[] GetDepartmentDetails(int ID) {
            return base.Channel.GetDepartmentDetails(ID);
        }
        
        public System.Threading.Tasks.Task<HospitalWebClient.DepartmentService.DepartmentDetails[]> GetDepartmentDetailsAsync(int ID) {
            return base.Channel.GetDepartmentDetailsAsync(ID);
        }
        
        public string InsertDepartmentDetails(HospitalWebClient.DepartmentService.DepartmentDetails DepartmentInfo) {
            return base.Channel.InsertDepartmentDetails(DepartmentInfo);
        }
        
        public System.Threading.Tasks.Task<string> InsertDepartmentDetailsAsync(HospitalWebClient.DepartmentService.DepartmentDetails DepartmentInfo) {
            return base.Channel.InsertDepartmentDetailsAsync(DepartmentInfo);
        }
        
        public HospitalWebClient.DepartmentService.DepartmentDetails[] GetAllDepartments() {
            return base.Channel.GetAllDepartments();
        }
        
        public System.Threading.Tasks.Task<HospitalWebClient.DepartmentService.DepartmentDetails[]> GetAllDepartmentsAsync() {
            return base.Channel.GetAllDepartmentsAsync();
        }
        
        public bool UpdateDepartment(HospitalWebClient.DepartmentService.DepartmentDetails DepartmentID) {
            return base.Channel.UpdateDepartment(DepartmentID);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateDepartmentAsync(HospitalWebClient.DepartmentService.DepartmentDetails DepartmentID) {
            return base.Channel.UpdateDepartmentAsync(DepartmentID);
        }
        
        public bool DeleteDepartment(int EmployeeInfo) {
            return base.Channel.DeleteDepartment(EmployeeInfo);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteDepartmentAsync(int EmployeeInfo) {
            return base.Channel.DeleteDepartmentAsync(EmployeeInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HospitalWebClient.DepartmentService.deleteDepartmentResponse HospitalWebClient.DepartmentService.IDepartmentService.deleteDepartment1(HospitalWebClient.DepartmentService.deleteDepartmentRequest request) {
            return base.Channel.deleteDepartment1(request);
        }
        
        public string deleteDepartment1(HospitalWebClient.DepartmentService.deleteDepartment dd) {
            HospitalWebClient.DepartmentService.deleteDepartmentRequest inValue = new HospitalWebClient.DepartmentService.deleteDepartmentRequest();
            inValue.dd = dd;
            HospitalWebClient.DepartmentService.deleteDepartmentResponse retVal = ((HospitalWebClient.DepartmentService.IDepartmentService)(this)).deleteDepartment1(inValue);
            return retVal.deleteDepartmentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<HospitalWebClient.DepartmentService.deleteDepartmentResponse> HospitalWebClient.DepartmentService.IDepartmentService.deleteDepartment1Async(HospitalWebClient.DepartmentService.deleteDepartmentRequest request) {
            return base.Channel.deleteDepartment1Async(request);
        }
        
        public System.Threading.Tasks.Task<HospitalWebClient.DepartmentService.deleteDepartmentResponse> deleteDepartment1Async(HospitalWebClient.DepartmentService.deleteDepartment dd) {
            HospitalWebClient.DepartmentService.deleteDepartmentRequest inValue = new HospitalWebClient.DepartmentService.deleteDepartmentRequest();
            inValue.dd = dd;
            return ((HospitalWebClient.DepartmentService.IDepartmentService)(this)).deleteDepartment1Async(inValue);
        }
        
        public bool FindById(int id) {
            return base.Channel.FindById(id);
        }
        
        public System.Threading.Tasks.Task<bool> FindByIdAsync(int id) {
            return base.Channel.FindByIdAsync(id);
        }
        
        public HospitalWebClient.DepartmentService.getAllDepartments getDepartments() {
            return base.Channel.getDepartments();
        }
        
        public System.Threading.Tasks.Task<HospitalWebClient.DepartmentService.getAllDepartments> getDepartmentsAsync() {
            return base.Channel.getDepartmentsAsync();
        }
    }
}
